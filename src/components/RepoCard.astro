---
const { repoName, bannerPath } = Astro.props;

const apiUrl = `https://api.github.com/repos/${repoName}`;
const bannerUrl = `${apiUrl}/contents/${bannerPath}`;
let bannerImg = null;
let repo = null;

try {
  const req = await fetch(apiUrl);
  if (!req.ok) throw new Error(`Repo fetch failed : ${req.status}`);
  repo = await req.json();

  // Fetch banner image
  const bannerRes = await fetch(bannerUrl);
  if (!bannerRes.ok) throw new Error(`Banner fetch failed: ${bannerRes.status}`)

  const banner = await bannerRes.json();
  bannerImg = banner.download_url;

} catch (error) {
  console.error('Error fetching repository data:', error);
}

import { Image } from 'astro:assets';
---

<div class="section is-medium">
  <a class="repo-link" href={repo?.html_url}>

    <div class="repo-box is-card columns is-mobile radius-xxl p-2">

      <figure class="image column is-narrow">
        <Image inferSize={true} class="repo-img radius-xl" src={bannerImg} alt={`${repo?.name} banner`} />
      </figure>


      <div class="column">
        <span class="title repo-title">{repo?.name}</span><br>
        <span class="subtitle repo-desc">{repo?.description}</span>

        <div class="subtitle my-4">
          <span class="icon colorized"> <i class="fa-solid fa-star"></i></span>
          <span class="star-count colorized">{repo?.stargazers_count}</span>
        </div>

      </div>

    </div>

  </a>
</div>

<style>
  .image {
    width: 100%;
    max-width: 16rem;
    height: auto;
  }
</style>
